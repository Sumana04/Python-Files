
1. Suppose you have a data set containing daily temperature reading for a city, and you want to identify days with extrem conditions.
Find days where the temperature either exceeded 35 degrees Celsius (Hot day), or droped bellow 5 degrees Celsius(Cold day).
Input:
temperatures=np.array([32.5,34.2,36.8,29.3,31.0,38.7,23.1,18.5,22.8,37.2])
Output:
Hot Days:
Day      Temperature(C)
3         36.8
6         38.7
10        37.2

Cold Days:
Day      Temperature(C)
11        4.0
14        -4.0
15        -12.0




import numpy as np
temperatures = np.array([32.5, 34.2, 36.8, 29.3, 31.0, 38.7, 23.1, 18.5, 22.8, 37.2, 4.0, -4.0, -12.0])
# Identify hot days (temperature > 35 degrees celcius)
hot_days_mask = temperatures > 35              
 # Adding 1 to indices for day numbering                                        
hot_days_indices = np.where(hot_days_mask)[0] + 1                                     
hot_days_temperatures = temperatures[hot_days_mask]
  # Identify cold days (temperature < 5 degrees Celsius)
cold_days_mask = temperatures < 5    
# Adding 1 to indices for day numbering                                               
cold_days_indices = np.where(cold_days_mask)[0] + 1 
 # Adding 1 to indices for day numbering                                 
cold_days_temperatures = temperatures[cold_days_mask]
 #print statement
print("Hot Days:")                                                                 
print("Day\tTemperature(C)")
for day, temp in zip(hot_days_indices, hot_days_temperatures):
    print(f"{day}\t{temp}")
#print statement
print("\nCold Days:")                                                                 
print("Day\tTemperature(C)")
for day, temp in zip(cold_days_indices, cold_days_temperatures):
    print(f"{day}\t{temp}")

OUTPUT:

Hot Days:
Day	Temperature(C)
3	36.8
6	38.7
10	37.2

Cold Days:
Day	Temperature(C)
11	4.0
12	-4.0
13	-12.0

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2.Suppose you have a dataset containing monthy sales data for a comapny, and you want to split
this data into quality reports for analysis and reporting purposes.
Input:
monthly_sales=np.array([120,135,148,165,180,155,168,190,205,198,210,225])
Output:
Quarter 1 Sales(in thousands of dollars):
[120 135 148]

Quarter 2 Sales(in thousands of dollars):
[165 180 155]

Quarter 3 Sales(in thousands of dollars):
[168 190 205]

Quarter 4 Sales(in thousands of dollars):
[198 210 225]




import numpy as np
 # Input monthly sales data
monthly_sales = np.array([120, 135, 148, 165, 180, 155, 168, 190, 205, 198, 210, 225])       
  # Reshape the array into a 4x3 matrix for quarterly grouping
quarterly_sales = monthly_sales.reshape(4, 3)                                                
 # Print quarterly sales reports
for quarter, sales in enumerate(quarterly_sales, start=1):                                   
    print(f"Quarter {quarter} Sales (in thousands of dollars):")
    print(sales)
    print()

OUTPUT:

Quarter 1 Sales (in thousands of dollars):
[120 135 148]

Quarter 2 Sales (in thousands of dollars):
[165 180 155]

Quarter 3 Sales (in thousands of dollars):
[168 190 205]

Quarter 4 Sales (in thousands of dollars):
[198 210 225]

----------------------------------------------------------------------------------------------------------------------------------------------------------------

3.Suppose you have a dataset containing customer data, and you want to split this 
data into two groups: one group for customers who made a purchase in the last 
30 days and another group for customers who haven't made a purchase in the last 
30 days.
Input:
customer_ids=np.array([101,102,103,104,105,106,107,108,109,110])
last_purchase_days_ago=np.array([5,15,20,25,30,35,40,45,50,55])
Output:
Active Customers(last Purchase<= 30 days ago):
[101 102 103 104 105]

Inactive Customers(last purchase>30 days ago):
[106 107 108 109 110]





import numpy as np
 # Input customer data
customer_ids = np.array([101, 102, 103, 104, 105, 106, 107, 108, 109, 110])           
last_purchase_days_ago = np.array([5, 15, 20, 25, 30, 35, 40, 45, 50, 55])
  # Find active customers
active_customers_mask = last_purchase_days_ago <= 30                                  
active_customers = customer_ids[active_customers_mask]
#Find inactive customers
inactive_customers_mask = last_purchase_days_ago > 30                                   
inactive_customers = customer_ids[inactive_customers_mask]
# Print active and inactive customers
print("Active Customers (last Purchase <= 30 days ago):")                              
print(active_customers)
print("\nInactive Customers (last purchase > 30 days ago):")
print(inactive_customers)

OUTPUT:

Active Customers (last Purchase <= 30 days ago):
[101 102 103 104 105]

Inactive Customers (last purchase > 30 days ago):
[106 107 108 109 110]

---------------------------------------------------------------------------------------------------------------------------------------------------------------

4.Suppose you have two sets of employee data--one containing information about
full-time employees and another cointaining information about part-time employees.
You want to combine this data to create a comprehensive employee dataset for 
HR analysis.
Input:
#Employee data for full-time employees
full_time_employees=np.array([
[101,'John Doe','Full-Time',55000],
[102,'Jane Smith','Full-Time',60000],
[103,'Mike Johnson','Full-Time',52000]
])

#Employee data for part-time employees
part_time_employees=np.array([
[201,'Alice Brown','Part-Time',25000],
[202,'Bob Wilson','Part-Time',28000],
[203,'Emily Davis','Part-Time',22000]
])

Output:
Combined Employee data:
Employee ID: 101, Name: John Doe, Type: Full-Time,Salary: 55000
Employee ID: 102, Name: Jane Smith, Type: Full-Time,Salary: 60000
Employee ID: 103, Name: Mike Johnson, Type: Full-Time,Salary: 52000
Employee ID: 201, Name: Alice Brown, Type: Part-Time,Salary: 25000
Employee ID: 202, Name: Bob Wilson, Type: Part-Time,Salary: 28000
Employee ID: 203, Name: Emily Davis, Type: Part-Time,Salary: 22000





import numpy as np
#Employee data for full-time employees
full_time_employees=np.array([                                                     
[101,'John Doe','Full-Time',55000],
[102,'Jane Smith','Full-Time',60000],
[103,'Mike Johnson','Full-Time',52000]
])
 #Employee data for part-time employees
part_time_employees=np.array([                                                       
[201,'Alice Brown','Part-Time',25000],
[202,'Bob Wilson','Part-Time',28000],
[203,'Emily Davis','Part-Time',22000]
])
#Combining two arrays
new_array=np.concatenate((full_time_employees,part_time_employees))                
print("Combined Employee data:")
#for loop for access the data in the combined array
for i in new_array:                                                                  
    emp_id,emp_name,emp_type,emp_salary=i
    print("Employee ID:",emp_id,"Name:",emp_name,"Type:",emp_type,"Salary:",emp_salary)    #print statement

OUTPUT:

Combined Employee data:
Employee ID: 101 Name: John Doe Type: Full-Time Salary: 55000
Employee ID: 102 Name: Jane Smith Type: Full-Time Salary: 60000
Employee ID: 103 Name: Mike Johnson Type: Full-Time Salary: 52000
Employee ID: 201 Name: Alice Brown Type: Part-Time Salary: 25000
Employee ID: 202 Name: Bob Wilson Type: Part-Time Salary: 28000
Employee ID: 203 Name: Emily Davis Type: Part-Time Salary: 22000

-------------------------------------------------------------------------------------------------------------------------------------------------------



