#1. Write a Python program to sum all the items in a list. 

# creating a list
list1 = [15,78,12,34,11]
#using comprehension
total = 0
[total := total + x for x in list1]
#printing the total sum of elements
print("total sum of elements in list are " ,total)
# using sum() function
total = sum(list1)
# printing total value
print("Sum of all elements in given list: ", total)

OUTPUT:

total sum of elements in list are  150
Sum of all elements in given list:  150

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Q.2. Write a Python program to get the largest and smallest number from a list without built-in functions. 

#creating list
list1 = [10,45,34,21,1,46,8]
#defining the function 
def grestes_smallest(list1):
#creating variable for large and small elements
    largest = list1[0]
    smallest = list1[0]
#for loop to traverse the list
    for num in list1:
        if num > largest:
            largest = num
        elif num < smallest:
            smallest = num
    return largest, smallest
#printing the largest and smallest number
print("Largest of number is ", grestes_smallest(list1)[0])
print("smallest of number is ", grestes_smallest(list1)[1])


OUTPUT:

Largest of number is  46
smallest of number is  1
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Q. 3. Write a Python program to find duplicate values from a list and display those. 

#Initializing array     
arr = [7,2,4,6,9,7,7,6,4,0,3];
#printing the statement
print("Duplicate elements in given array: ");    
#Searches for duplicate element    
for i in range(0, len(arr)):    
    for j in range(i+1, len(arr)):    
        if(arr[i] == arr[j]):    
            print(arr[j]);   

OUTPUT:

Duplicate elements in given array: 
7
7
4
6
7
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#q.4. Write a Python program to split a given list into two parts where the length of the first part of the list is given. 
Original list: [1, 1, 2, 3, 4, 4, 5, 1] 
Length of the first part of the list: 3 
Splitted the said list into two parts: 
([1, 1, 2], [3, 4, 4, 5, 1]) 

#defining the function
def split_list(input_list, length_first_part):
# Check if the specified length is valid
    if length_first_part >= len(input_list):
        return input_list, []  # Return the whole list as the first part and an empty list as the second part
    else:
        return input_list[:length_first_part], input_list[length_first_part:]  # Split the list based on the specified length
# Given list and length of the first part
original_list = [1, 1, 2, 3, 4, 4, 5, 1]
length_first_part = 3
# Call the function to split the list
first_part, second_part = split_list(original_list, length_first_part)
# Printing the original list, length of the first part, and the split result
print("Original list:", original_list)
print("Length of the first part of the list:", length_first_part)
print("Splitted the said list into two parts:")
print((first_part, second_part))

OUTPUT:

Original list: [1, 1, 2, 3, 4, 4, 5, 1]
Length of the first part of the list: 3
Splitted the said list into two parts:
([1, 1, 2], [3, 4, 4, 5, 1])
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#Q.5. Write a Python program to traverse a given list in reverse order, and print the elements with the original index. Original list: ['red', 'green', 'white', 'black'] 

#defining the function
def reverse_traverse_list(input_list):
# Iterate over the list in reverse order using [::-1]
    for index, value in enumerate(input_list[::-1]):
# Calculate the original index using the length of the list minus the current index
        original_index = len(input_list) - index - 1
        print(input_list[original_index])  # Print the element from the original list
# Given list
original_list = ['red', 'green', 'white', 'black']
# Call the function to reverse traverse the list
reverse_traverse_list(original_list)


OUTPUT:

black
white
green
red
